\(:model, :appName, ...) 
    let subEps = model.endpoints where .isSub && .appName = appName;
    let pubs = model.calls where .from.appName = appName && .isPub;
    $`
// ${appName::} UI

window.gen = window.gen || {};
window.gen.ui = {};

const e = React.createElement;
const $ = q => document.querySelector(q);
const net = window.gen.net;
const userId = window.gen.app.userId;

window.gen.ui.Title = function Title() {
    return e('h1', null, window.gen.app.name);
};

${subEps => $"
    window.gen.ui.${.eventName} = function ${.eventName}() {
        const [val, setVal] = React.useState();
        React.useEffect(() => net.on${.eventName}(setVal));
        return e('div', null, `${.eventName}: ${'$'}{JSON.stringify(val)}`);
    }

    window.gen.ui.${.eventName}Log = function ${.eventName}Log() {
        const [vals, setVals] = React.useState([]);
        React.useEffect(() => net.on${.eventName}(val => setVals(vals.concat([val]))));
        return e('ul', null, vals.map(({userId, input, timestamp}) =>
            e('li', {key: timestamp}, `${'$'}{userId}: ${'$'}{input}`)
        ));
    }
" orderby .::\i\n}

${pubs => $`
    window.gen.ui.${.to.eventName}Input = function ${.to.eventName}Input() {
        let id = '${.to.eventName}_input';
        const ${.to.eventName} = () => {
            const input = $('#'+id);
            input.value && net.emit${.to.eventName}(input.value);
            input.value = '';
        };
        return e('div', null,
            e('textarea', {id}),
            e('button', {onClick: ${.to.eventName}}, '${.to.eventName}'),
        );
    };
` orderby .::\i\n}
`
