\(:model, :appName, ...) 
    let subEps = model.endpoints where .isSub && .appName = appName;
    let pubs = model.calls where .from.appName = appName && .isPub;
    $`
// Code generated by socket-sysl. DO NOT EDIT.

// ${appName::} UI

import {createElement, useEffect, useState} from 'react';

import {
    ${subEps => $`on${.eventName},` orderby .::\i\n}
    ${pubs => $`emit${.to.eventName},` orderby .::\i\n}
} from './net'
import {name} from './app'

const e = createElement;
const $ = q => document.querySelector(q);

function Title() {
    return e('h1', null, name);
}

${subEps => $"
    function ${.eventName}() {
        const [val, setVal] = useState();
        useEffect(() => on${.eventName}(setVal));
        return e('div', null, `${.eventName}: ${'$'}{JSON.stringify(val)}`);
    }

    function ${.eventName}Log() {
        const [vals, setVals] = useState([]);
        useEffect(() => on${.eventName}(val => setVals(vals.concat([val]))));
        return e('ul', null, vals.map(({userId, timestamp, body}) =>
            e('li', {key: timestamp}, `${'$'}{userId}: ${'$'}{body}`)
        ));
    }
" orderby .::\i\n}

${pubs => $`
    function ${.to.eventName}Input() {
        let id = '${.to.eventName}_input';
        const ${.to.eventName} = () => {
            const input = $('#'+id);
            input.value && emit${.to.eventName}(input.value);
            input.value = '';
        };
        return e('div', null,
            e('textarea', {id}),
            e('button', {onClick: ${.to.eventName}}, '${.to.eventName}'),
        );
    }
` orderby .::\i\n}

export {
    Title,
    ${subEps => $`
        ${.eventName},
        ${.eventName}Log,
    ` orderby .::\i\n}
    ${pubs => $`
        ${.to.eventName}Input,
    ` orderby .::\i\n}
}
`
