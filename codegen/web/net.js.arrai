\(:model, :appName, config: (:host, :port), ...)
    let subEps = model.endpoints where .isSub && .appName = appName;
    let pubs = model.calls where .from.appName = appName && .isPub;
    $`
// Code generated by socket-sysl. DO NOT EDIT.

// ${appName::} Networking

import io from 'socket.io-client';

import {userId} from './app'

const socket = io('http://${host}:${port}');
setTimeout(() => socket.emit('Connect'), 100)

${subEps => $`
    function on${.eventName}(callback) {
        socket.on('${.eventName}', callback);
        return () => socket.off('${.eventName}', callback);
    }
` orderby .::\i\n}

${pubs => $`
    function emit${.to.eventName}(body) {
        socket.emit('${.to.eventName}', {userId, body, timestamp: Date.now()}) 
    }
` orderby .::\i\n}

export {
    ${subEps => $`on${.eventName},` orderby .::\i\n}
    ${pubs => $`emit${.to.eventName},` orderby .::\i\n}
}
`
